# -*- coding: utf-8 -*-
"""Assignment_1_part_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TW08DwsVUSDea8DUbfVnFXR0gKOJPwiD
"""

import pandas as pd
import numpy as np
#from numpy.random import permutation
import matplotlib.pyplot as plt
#import seaborn as sns
#from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
from sklearn import datasets, linear_model
#sns.set()

url = 'https://raw.githubusercontent.com/Shivam-2027/MLAS1.github.io/master/auto-mpg.data'

df = pd.read_table(url, sep = '\s+', header = 0, names = ['mpg', 'cyl', 'disp', 'hp', 'weight', 'acc', 'year', 'origin', 'name'])

df.head()

df = df[df['hp'] != '?']

X = df['acc'].astype(float)
Y = df['hp'].astype(float)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.8, random_state=35)

train_test_split(Y, shuffle = False)

#creating the linear regression object
regr = linear_model.LinearRegression()

#get the training and test values in the correct form
xt = np.array(X_train)
yt = np.array(Y_train)
xtest = np.array(X_test)

#train the model using training data
regr.fit(xt.reshape(-1, 1), yt)

#get the Y prediction values
y_pred = regr.predict(xtest.reshape(-1, 1))

plt.scatter(X_test, Y_test, color='black')
plt.plot(X_test, y_pred)

plt.title('Hp vs Mpg')
plt.xlabel('Miles per gallon')
plt.ylabel('Horse Power')
plt.show()

print('Mean squared error: %.2f'% mean_squared_error(Y_test, y_pred))
print('Coefficient of determination: %.2f'% r2_score(Y_test, y_pred))